{"remainingRequest":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/babel-loader/lib/index.js!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/components/group/create-group.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/components/group/create-group.vue","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/babel.config.js","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _Radio2 from \"element-ui/lib/theme-chalk/radio.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Radio from \"element-ui/lib/radio\";\nimport _RadioGroup2 from \"element-ui/lib/theme-chalk/radio-group.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _RadioGroup from \"element-ui/lib/radio-group\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _FormItem2 from \"element-ui/lib/theme-chalk/form-item.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _FormItem from \"element-ui/lib/form-item\";\nimport _Form2 from \"element-ui/lib/theme-chalk/form.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Form from \"element-ui/lib/form\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  components: {\n    ElForm: _Form,\n    ElFormItem: _FormItem,\n    ElInput: _Input,\n    ElSelect: _Select,\n    ElOption: _Option,\n    ElRadioGroup: _RadioGroup,\n    ElRadio: _Radio\n  },\n  data: function data() {\n    return {\n      form: {\n        groupID: '',\n        name: '',\n        type: this.TIM.TYPES.GRP_WORK,\n        avatar: '',\n        introduction: '',\n        notification: '',\n        joinOption: 'FreeAccess',\n        memberList: []\n      },\n      options: [],\n      loading: false,\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入群名称',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    joinOptionDisabled: function joinOptionDisabled() {\n      return [this.TIM.TYPES.GRP_WORK, this.TIM.TYPES.GRP_MEETING, this.TIM.TYPES.GRP_AVCHATROOM].includes(this.form.type);\n    }\n  },\n  methods: {\n    onSubmit: function onSubmit(ref) {\n      var _this = this;\n\n      this.$refs[ref].validate(function (valid) {\n        if (!valid) {\n          return false;\n        }\n\n        _this.createGroup();\n      });\n    },\n    closeCreateGroupModel: function closeCreateGroupModel() {\n      this.$store.commit('updateCreateGroupModelVisible', false);\n    },\n    createGroup: function createGroup() {\n      var _this2 = this;\n\n      this.tim.createGroup(this.getOptions()).then(function (imResponse) {\n        _this2.$store.commit('showMessage', {\n          message: \"\\u7FA4\\u7EC4\\uFF1A\\u3010\".concat(imResponse.data.group.name, \"\\u3011\\u521B\\u5EFA\\u6210\\u529F\"),\n          type: 'success'\n        });\n\n        _this2.closeCreateGroupModel();\n      }).catch(function (error) {\n        _this2.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    },\n    getOptions: function getOptions() {\n      var options = _objectSpread(_objectSpread({}, this.form), {}, {\n        memberList: this.form.memberList.map(function (userID) {\n          return {\n            userID: userID\n          };\n        })\n      });\n\n      if ([this.TIM.TYPES.GRP_WORK, this.TIM.TYPES.GRP_AVCHATROOM].includes(this.form.type)) {\n        delete options.joinOption;\n      }\n\n      return options;\n    },\n    handleSearchUser: function handleSearchUser(userID) {\n      var _this3 = this;\n\n      if (userID !== '') {\n        this.loading = true;\n        this.tim.getUserProfile({\n          userIDList: [userID]\n        }).then(function (_ref) {\n          var data = _ref.data;\n          _this3.options = data.map(function (item) {\n            return item.userID;\n          });\n          _this3.loading = false;\n        }).catch(function (error) {\n          _this3.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          });\n        });\n      }\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACAA;AACAC,iBADA;AAEAC,yBAFA;AAGAC,mBAHA;AAIAC,qBAJA;AAKAC,qBALA;AAMAC,6BANA;AAOAC;AAPA,GADA;AAUAC,MAVA,kBAUA;AACA;AACAC;AACAC,mBADA;AAEAC,gBAFA;AAGAC,qCAHA;AAIAC,kBAJA;AAKAC,wBALA;AAMAC,wBANA;AAOAC,gCAPA;AAQAC;AARA,OADA;AAWAC,iBAXA;AAYAC,oBAZA;AAaAC;AACAT;AAAAU;AAAAC;AAAAC;AAAA;AADA;AAbA;AAiBA,GA5BA;AA6BAC;AACAC,sBADA,gCACA;AACA,cACA,uBADA,EAEA,0BAFA,EAGA,6BAHA,EAIAC,QAJA,CAIA,cAJA;AAKA;AAPA,GA7BA;AAsCAC;AACAC,YADA,oBACAC,GADA,EACA;AAAA;;AACA;AACA;AACA;AACA;;AACA;AACA,OALA;AAMA,KARA;AASAC,yBATA,mCASA;AACA;AACA,KAXA;AAYAC,eAZA,yBAYA;AAAA;;AACA;AACA;AACAT,kHADA;AAEAV;AAFA;;AAIA;AACA,OANA,EAOAoB,KAPA,CAOA;AACA;AACApB,uBADA;AAEAU;AAFA;AAIA,OAZA;AAaA,KA1BA;AA2BAW,cA3BA,wBA2BA;AACA,oDACA,SADA;AAEAhB;AAAA;AAAAiB;AAAA;AAAA;AAFA;;AAIA;AACA;AACA;;AACA;AACA,KApCA;AAqCAC,oBArCA,4BAqCAD,MArCA,EAqCA;AAAA;;AACA;AACA;AACA;AAAAE;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA,SAHA,EAIAJ,KAJA,CAIA;AACA;AACApB,yBADA;AAEAU;AAFA;AAIA,SATA;AAUA;AACA;AAnDA;AAtCA","names":["components","ElForm","ElFormItem","ElInput","ElSelect","ElOption","ElRadioGroup","ElRadio","data","form","groupID","name","type","avatar","introduction","notification","joinOption","memberList","options","loading","rules","required","message","trigger","computed","joinOptionDisabled","includes","methods","onSubmit","ref","closeCreateGroupModel","createGroup","catch","getOptions","userID","handleSearchUser","userIDList"],"sourceRoot":"src/components/group","sources":["create-group.vue"],"sourcesContent":["<template>\n  <div>\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"createGroupForm\" label-width=\"100px\">\n      <el-form-item label=\"群ID\">\n        <el-input v-model=\"form.groupID\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"群名称\" prop=\"name\">\n        <el-input v-model=\"form.name\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"群类型\">\n        <el-select v-model=\"form.type\">\n          <el-option label=\"Work\" :value=\"TIM.TYPES.GRP_WORK\"></el-option>\n          <el-option label=\"Public\" :value=\"TIM.TYPES.GRP_PUBLIC\"></el-option>\n          <el-option label=\"Meeting\" :value=\"TIM.TYPES.GRP_MEETING\"></el-option>\n          <el-option label=\"AVChatRoom\" :value=\"TIM.TYPES.GRP_AVCHATROOM\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"群头像地址\">\n        <el-input v-model=\"form.avatar\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"群简介\">\n        <el-input type=\"textarea\" v-model=\"form.introduction\" :maxlength=\"240\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"群公告\">\n        <el-input type=\"textarea\" v-model=\"form.notification\" :maxlength=\"300\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"加群方式\">\n        <el-radio-group v-model=\"form.joinOption\" :disabled=\"joinOptionDisabled\">\n          <el-radio label=\"FreeAccess\">自由加群</el-radio>\n          <el-radio label=\"NeedPermission\">需要验证</el-radio>\n          <el-radio label=\"DisableApply\">禁止加群</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item label=\"群成员列表\">\n        <el-select\n          v-model=\"form.memberList\"\n          default-first-option\n          multiple\n          filterable\n          remote\n          :disabled=\"form.type === TIM.TYPES.GRP_AVCHATROOM\"\n          :remote-method=\"handleSearchUser\"\n          :loading=\"loading\"\n          placeholder=\"请输入群成员 userID\"\n        >\n          <el-option v-for=\"item in options\" :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\n        </el-select>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\">\n      <el-button type=\"primary\" @click=\"onSubmit('createGroupForm')\">立即创建</el-button>\n      <el-button @click=\"closeCreateGroupModel\">取消</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  Form,\n  FormItem,\n  Input,\n  Select,\n  Option,\n  Radio,\n  RadioGroup\n} from 'element-ui'\nexport default {\n  components: {\n    ElForm: Form,\n    ElFormItem: FormItem,\n    ElInput: Input,\n    ElSelect: Select,\n    ElOption: Option,\n    ElRadioGroup: RadioGroup,\n    ElRadio: Radio\n  },\n  data() {\n    return {\n      form: {\n        groupID: '',\n        name: '',\n        type: this.TIM.TYPES.GRP_WORK,\n        avatar: '',\n        introduction: '',\n        notification: '',\n        joinOption: 'FreeAccess',\n        memberList: []\n      },\n      options: [],\n      loading: false,\n      rules: {\n        name: [{ required: true, message: '请输入群名称', trigger: 'blur' }]\n      }\n    }\n  },\n  computed: {\n    joinOptionDisabled() {\n      return [\n        this.TIM.TYPES.GRP_WORK,\n        this.TIM.TYPES.GRP_MEETING,\n        this.TIM.TYPES.GRP_AVCHATROOM\n      ].includes(this.form.type)\n    }\n  },\n  methods: {\n    onSubmit(ref) {\n      this.$refs[ref].validate(valid => {\n        if (!valid) {\n          return false\n        }\n        this.createGroup()\n      })\n    },\n    closeCreateGroupModel() {\n      this.$store.commit('updateCreateGroupModelVisible', false)\n    },\n    createGroup() {\n      this.tim.createGroup(this.getOptions()).then((imResponse) => {\n         this.$store.commit('showMessage', {\n            message: `群组：【${imResponse.data.group.name}】创建成功`,\n            type: 'success'\n          })\n        this.closeCreateGroupModel()\n      })\n      .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    getOptions() {\n      let options = {\n        ...this.form,\n        memberList: this.form.memberList.map(userID => ({ userID }))\n      }\n      if ([this.TIM.TYPES.GRP_WORK, this.TIM.TYPES.GRP_AVCHATROOM].includes(this.form.type)) {\n        delete options.joinOption\n      }\n      return options\n    },\n    handleSearchUser(userID) {\n      if (userID !== '') {\n        this.loading = true\n        this.tim.getUserProfile({ userIDList: [userID] }).then(({ data }) => {\n          this.options = data.map(item => item.userID)\n          this.loading = false\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n</style>\n"]}]}
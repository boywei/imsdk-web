{"remainingRequest":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/babel-loader/lib/index.js!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/components/group/group-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/components/group/group-list.vue","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/babel.config.js","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nimport _Autocomplete2 from \"element-ui/lib/theme-chalk/autocomplete.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Autocomplete from \"element-ui/lib/autocomplete\";\nimport _Dialog2 from \"element-ui/lib/theme-chalk/dialog.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Dialog from \"element-ui/lib/dialog\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport CreateGroup from \"./create-group.vue\";\nimport GroupItem from \"./group-item.vue\";\nexport default {\n  data: function data() {\n    return {\n      groupID: '',\n      hideSearchLoading: true\n    };\n  },\n  components: {\n    GroupItem: GroupItem,\n    ElDialog: _Dialog,\n    CreateGroup: CreateGroup,\n    ElAutocomplete: _Autocomplete\n  },\n  computed: _objectSpread({\n    groupList: function groupList() {\n      return this.$store.state.group.groupList;\n    }\n  }, mapState({\n    createGroupModelVisible: function createGroupModelVisible(state) {\n      return state.group.createGroupModelVisible;\n    }\n  })),\n  methods: {\n    onGroupUpdated: function onGroupUpdated(groupList) {\n      this.$store.dispatch('updateGroupList', groupList);\n    },\n    createGroup: function createGroup() {},\n    closeCreateGroupModel: function closeCreateGroupModel() {\n      this.$store.commit('updateCreateGroupModelVisible', false);\n    },\n    searchGroupByID: function searchGroupByID(queryString, showInSearchResult) {\n      var _this = this;\n\n      if (queryString.trim().length > 0) {\n        this.hideSearchLoading = false;\n        this.tim.searchGroupByID(queryString).then(function (_ref) {\n          var group = _ref.data.group;\n          showInSearchResult([group]);\n        }).catch(function () {\n          _this.$store.commit('showMessage', {\n            message: '没有找到该群',\n            type: 'error'\n          });\n        });\n      } else {\n        this.hideSearchLoading = true;\n      }\n    },\n    showCreateGroupModel: function showCreateGroupModel() {\n      this.$store.commit('updateCreateGroupModelVisible', true);\n    },\n    applyJoinGroup: function applyJoinGroup(group) {\n      var _this2 = this;\n\n      this.tim.joinGroup({\n        groupID: group.groupID\n      }).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.t0 = res.data.status;\n                  _context.next = _context.t0 === _this2.TIM.TYPES.JOIN_STATUS_WAIT_APPROVAL ? 3 : _context.t0 === _this2.TIM.TYPES.JOIN_STATUS_SUCCESS ? 5 : _context.t0 === _this2.TIM.TYPES.JOIN_STATUS_ALREADY_IN_GROUP ? 9 : 11;\n                  break;\n\n                case 3:\n                  _this2.$store.commit('showMessage', {\n                    message: '申请成功，等待群管理员确认。',\n                    type: 'info'\n                  });\n\n                  return _context.abrupt(\"break\", 12);\n\n                case 5:\n                  _context.next = 7;\n                  return _this2.$store.dispatch('checkoutConversation', \"GROUP\".concat(res.data.group.groupID));\n\n                case 7:\n                  _this2.$store.commit('showMessage', {\n                    message: '加群成功',\n                    type: 'success'\n                  });\n\n                  return _context.abrupt(\"break\", 12);\n\n                case 9:\n                  _this2.$store.commit('showMessage', {\n                    message: '您已经是群成员了，请勿重复加群哦！',\n                    type: 'info'\n                  });\n\n                  return _context.abrupt(\"break\", 12);\n\n                case 11:\n                  return _context.abrupt(\"break\", 12);\n\n                case 12:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (error) {\n        _this2.$store.commit('showMessage', {\n          message: error.message,\n          type: 'error'\n        });\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AAEA;AACA;AACA;AACAA,MADA,kBACA;AACA;AACAC,iBADA;AAEAC;AAFA;AAIA,GANA;AAOAC;AACAC,wBADA;AAEAC,qBAFA;AAGAC,4BAHA;AAIAC;AAJA,GAPA;AAaAC;AACAC;AACA;AACA;AAHA,KAIAC;AACAC;AACA;AACA;AAHA,IAJA,CAbA;AAuBAC;AACAC,kBADA,0BACAJ,SADA,EACA;AACA;AACA,KAHA;AAIAK,eAJA,yBAIA,EAJA;AAKAC,yBALA,mCAKA;AACA;AACA,KAPA;AAQAC,mBARA,2BAQAC,WARA,EAQAC,kBARA,EAQA;AAAA;;AACA;AACA;AACA,iBACAF,eADA,CACAC,WADA,EAEAE,IAFA,CAEA;AAAA;AACAD;AACA,SAJA,EAKAE,KALA,CAKA;AACA;AACAC,6BADA;AAEAC;AAFA;AAIA,SAVA;AAWA,OAbA,MAaA;AACA;AACA;AACA,KAzBA;AA0BAC,wBA1BA,kCA0BA;AACA;AACA,KA5BA;AA6BAC,kBA7BA,0BA6BAC,KA7BA,EA6BA;AAAA;;AACA,eACAC,SADA,CACA;AAAAzB;AAAA,OADA,EAEAkB,IAFA;AAAA,4EAEA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACAQ,eADA;AAAA,kDAEA,0CAFA,uBAQA,oCARA,uBAkBA,6CAlBA;AAAA;;AAAA;AAGA;AACAN,6CADA;AAEAC;AAFA;;AAHA;;AAAA;AAAA;AAAA,yBASA,uBACA,sBADA,iBAEAK,sBAFA,EATA;;AAAA;AAaA;AACAN,mCADA;AAEAC;AAFA;;AAbA;;AAAA;AAmBA;AACAD,gDADA;AAEAC;AAFA;;AAnBA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFA;;AAAA;AAAA;AAAA;AAAA,WA6BAF,KA7BA,CA6BA;AACA;AACAC,gCADA;AAEAC;AAFA;AAIA,OAlCA;AAmCA;AAjEA;AAvBA","names":["data","groupID","hideSearchLoading","components","GroupItem","ElDialog","CreateGroup","ElAutocomplete","computed","groupList","mapState","createGroupModelVisible","methods","onGroupUpdated","createGroup","closeCreateGroupModel","searchGroupByID","queryString","showInSearchResult","then","catch","message","type","showCreateGroupModel","applyJoinGroup","group","joinGroup","res"],"sourceRoot":"src/components/group","sources":["group-list.vue"],"sourcesContent":["<template>\n  <div class=\"list-container\">\n    <div class=\"header-bar\">\n      <el-autocomplete\n        :value-key=\"'groupID'\"\n        :debounce=\"500\"\n        size=\"mini\"\n        v-model=\"groupID\"\n        placeholder=\"输入群ID搜索\"\n        :fetch-suggestions=\"searchGroupByID\"\n        class=\"group-seach-bar\"\n        prefix-icon=\"el-icon-search\"\n        :hide-loading=\"hideSearchLoading\"\n        @input=\"hideSearchLoading = false\"\n        @select=\"applyJoinGroup\"\n      ></el-autocomplete>\n      <button title=\"创建群组\" @click=\"showCreateGroupModel\">\n        <i class=\"tim-icon-add\"></i>\n      </button>\n    </div>\n    <div class=\"group-container\">\n      <group-item v-for=\"group in groupList\" :key=\"group.groupID\" :group=\"group\" />\n      <el-dialog title=\"创建群组\" :visible=\"createGroupModelVisible\" @close=\"closeCreateGroupModel\" width=\"30%\">\n        <create-group></create-group>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport { Dialog, Autocomplete } from 'element-ui'\nimport CreateGroup from './create-group.vue'\nimport GroupItem from './group-item.vue'\nexport default {\n  data() {\n    return {\n      groupID: '',\n      hideSearchLoading: true\n    }\n  },\n  components: {\n    GroupItem,\n    ElDialog: Dialog,\n    CreateGroup,\n    ElAutocomplete: Autocomplete\n  },\n  computed: {\n    groupList: function() {\n      return this.$store.state.group.groupList\n    },\n    ...mapState({\n      createGroupModelVisible: state => {\n        return state.group.createGroupModelVisible\n      }\n    })\n  },\n  methods: {\n    onGroupUpdated(groupList) {\n      this.$store.dispatch('updateGroupList', groupList)\n    },\n    createGroup() {},\n    closeCreateGroupModel() {\n      this.$store.commit('updateCreateGroupModelVisible', false)\n    },\n    searchGroupByID(queryString, showInSearchResult) {\n      if (queryString.trim().length > 0) {\n        this.hideSearchLoading = false\n        this.tim\n          .searchGroupByID(queryString)\n          .then(({ data: { group } }) => {\n            showInSearchResult([group])\n          })\n          .catch(() => {\n            this.$store.commit('showMessage', {\n              message: '没有找到该群',\n              type: 'error'\n            })\n          })\n      } else {\n        this.hideSearchLoading = true\n      }\n    },\n    showCreateGroupModel() {\n      this.$store.commit('updateCreateGroupModelVisible', true)\n    },\n    applyJoinGroup(group) {\n      this.tim\n        .joinGroup({ groupID: group.groupID })\n        .then(async res => {\n          switch(res.data.status) {\n            case this.TIM.TYPES.JOIN_STATUS_WAIT_APPROVAL:\n              this.$store.commit('showMessage', {\n                message: '申请成功，等待群管理员确认。',\n                type: 'info'\n              })\n              break\n            case this.TIM.TYPES.JOIN_STATUS_SUCCESS:\n              await this.$store.dispatch(\n                'checkoutConversation',\n                `GROUP${res.data.group.groupID}`\n              )\n              this.$store.commit('showMessage', {\n                message: '加群成功',\n                type: 'success'\n              })\n              break\n            case this.TIM.TYPES.JOIN_STATUS_ALREADY_IN_GROUP:\n              this.$store.commit('showMessage', {\n                message: '您已经是群成员了，请勿重复加群哦！',\n                type: 'info'\n              })\n              break\n            default: break\n          }\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            message: error.message,\n            type: 'error'\n          })\n        })\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.list-container\n  height 100%\n  width 100%\n  display flex\n  flex-direction column\n  .group-container \n    overflow-y scroll\n  .header-bar\n    display: flex;\n    flex-shrink 0\n    height 50px\n    border-bottom 1px solid $background-deep-dark\n    padding 10px 10px 10px 20px\n    .group-seach-bar\n      width 100%\n      margin-right 10px\n      >>> .el-input\n        input\n          color $first\n          border none\n          border-radius 30px\n          background-color $deep-background !important\n          &::placeholder\n            color $font-dark\n        .el-icon-search\n          color $font-dark\n    button\n      float right\n      display: inline-block;\n      cursor: pointer;\n      background $background-deep-dark\n      border: none\n      color: $font-dark;\n      box-sizing: border-box;\n      transition: .3s;\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      -ms-user-select: none;\n      margin: 0\n      padding 0\n      width 30px\n      height 30px\n      line-height 34px\n      font-size: 24px;\n      text-align: center;\n      white-space: nowrap;\n      border-radius: 50%\n      outline 0\n      flex-shrink 0\n      &:hover\n        transform: rotate(360deg);\n        color $light-primary\n  .scroll-container\n    overflow-y scroll\n    flex 1\n\n</style>\n"]}]}
{"remainingRequest":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/babel-loader/lib/index.js!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/components/conversation/conversationProfile/add-group-member.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/components/conversation/conversationProfile/add-group-member.vue","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/babel.config.js","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    ElInput: _Input\n  },\n  data: function data() {\n    return {\n      userID: ''\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    currentConversation: function currentConversation(state) {\n      return state.conversation.currentConversation;\n    }\n  })),\n  methods: {\n    addGroupMember: function addGroupMember() {\n      var _this = this;\n\n      var groupID = this.currentConversation.conversationID.replace('GROUP', '');\n      this.tim.addGroupMember({\n        groupID: groupID,\n        userIDList: [this.userID]\n      }).then(function (imResponse) {\n        var _imResponse$data = imResponse.data,\n            successUserIDList = _imResponse$data.successUserIDList,\n            failureUserIDList = _imResponse$data.failureUserIDList,\n            existedUserIDList = _imResponse$data.existedUserIDList;\n\n        if (successUserIDList.length > 0) {\n          _this.$store.commit('showMessage', {\n            message: \"\\u7FA4\\u6210\\u5458\\uFF1A\".concat(successUserIDList.join(','), \"\\uFF0C\\u52A0\\u7FA4\\u6210\\u529F\"),\n            type: 'success'\n          });\n\n          _this.tim.getGroupMemberProfile({\n            groupID: groupID,\n            userIDList: successUserIDList\n          }).then(function (_ref) {\n            var memberList = _ref.data.memberList;\n\n            _this.$store.commit('updateCurrentMemberList', memberList);\n          });\n        }\n\n        if (failureUserIDList.length > 0) {\n          _this.$store.commit('showMessage', {\n            message: \"\\u7FA4\\u6210\\u5458\\uFF1A\".concat(failureUserIDList.join(','), \"\\uFF0C\\u6DFB\\u52A0\\u5931\\u8D25\\uFF01\"),\n            type: 'error'\n          });\n        }\n\n        if (existedUserIDList.length > 0) {\n          _this.$store.commit('showMessage', {\n            message: \"\\u7FA4\\u6210\\u5458\\uFF1A\".concat(existedUserIDList.join(','), \"\\uFF0C\\u5DF2\\u5728\\u7FA4\\u4E2D\")\n          });\n        }\n      }).catch(function (error) {\n        _this.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAQA;AACA;AACAA;AACAC;AADA,GADA;AAIAC,MAJA,kBAIA;AACA;AACAC;AADA;AAGA,GARA;AASAC,8BACAC;AACAC;AAAA;AAAA;AADA,IADA,CATA;AAcAC;AACAC,kBADA,4BACA;AAAA;;AACA;AACA,eACAA,cADA,CACA;AACAC,wBADA;AAEAC;AAFA,OADA,EAKAC,IALA,CAKA;AACA,+BAIAC,eAJA;AAAA,YACAC,iBADA,oBACAA,iBADA;AAAA,YAEAC,iBAFA,oBAEAA,iBAFA;AAAA,YAGAC,iBAHA,oBAGAA,iBAHA;;AAKA;AACA;AACAC,qHADA;AAEAC;AAFA;;AAIA;AAAAR;AAAAC;AAAA,aACAC,IADA,CACA;AAAA;;AACA;AACA,WAHA;AAIA;;AACA;AACA;AACAK,2HADA;AAEAC;AAFA;AAIA;;AACA;AACA;AACAD;AADA;AAGA;AACA,OAhCA,EAiCAE,KAjCA,CAiCA;AACA;AACAD,uBADA;AAEAD;AAFA;AAIA,OAtCA;AAuCA;AA1CA;AAdA","names":["components","ElInput","data","userID","computed","mapState","currentConversation","methods","addGroupMember","groupID","userIDList","then","imResponse","successUserIDList","failureUserIDList","existedUserIDList","message","type","catch"],"sourceRoot":"src/components/conversation/conversationProfile","sources":["add-group-member.vue"],"sourcesContent":["<template>\n  <div>\n    <el-input v-model=\"userID\" placeholder=\"输入userID后 按回车键\" @keydown.enter.native=\"addGroupMember\"></el-input>\n  </div>\n</template>\n\n<script>\nimport { Input } from 'element-ui'\nimport { mapState } from 'vuex'\nexport default {\n  components: {\n    ElInput: Input\n  },\n  data() {\n    return {\n      userID: ''\n    }\n  },\n  computed: {\n    ...mapState({\n      currentConversation: state => state.conversation.currentConversation\n    })\n  },\n  methods: {\n    addGroupMember() {\n      const groupID = this.currentConversation.conversationID.replace('GROUP', '')\n      this.tim\n        .addGroupMember({\n          groupID,\n          userIDList: [this.userID]\n        })\n        .then((imResponse) => {\n          const {\n            successUserIDList,\n            failureUserIDList,\n            existedUserIDList\n          } = imResponse.data\n          if (successUserIDList.length > 0) {\n            this.$store.commit('showMessage', {\n              message: `群成员：${successUserIDList.join(',')}，加群成功`,\n              type: 'success'\n            })\n            this.tim.getGroupMemberProfile({groupID, userIDList: successUserIDList})\n            .then(({ data: { memberList }}) => {\n              this.$store.commit('updateCurrentMemberList', memberList)\n            })\n          }\n          if (failureUserIDList.length > 0) {\n            this.$store.commit('showMessage', {\n              message: `群成员：${failureUserIDList.join(',')}，添加失败！`,\n              type: 'error'\n            })\n          }\n          if (existedUserIDList.length > 0) {\n            this.$store.commit('showMessage', {\n              message: `群成员：${existedUserIDList.join(',')}，已在群中`\n            })\n          }\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped></style>\n"]}]}
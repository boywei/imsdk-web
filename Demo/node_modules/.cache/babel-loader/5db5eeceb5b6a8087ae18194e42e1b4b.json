{"remainingRequest":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/babel-loader/lib/index.js!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/components/message/merger-message/message-merger.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/components/message/merger-message/message-merger.vue","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/babel.config.js","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport MergerMessageItem from \"./mergerMessage-item\";\nimport { getFullDate } from \"../../../utils/date\";\nexport default {\n  name: 'CurrentConversation',\n  components: {\n    MergerMessageItem: MergerMessageItem\n  },\n  data: function data() {\n    return {\n      preScrollHeight: 0,\n      mergerMessageList: [],\n      showMessage: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    currentConversation: function currentConversation(state) {\n      return state.conversation.currentConversation;\n    },\n    mergerMessage: function mergerMessage(state) {\n      return state.conversation.mergerMessage;\n    }\n  })), {}, {\n    mergerList: function mergerList() {\n      return function (message) {\n        return message.payload.messageList;\n      };\n    }\n  }),\n  created: function created() {},\n  mounted: function mounted() {},\n  updated: function updated() {},\n  watch: {},\n  methods: {\n    getDate: function getDate(time) {\n      return getFullDate(new Date(time * 1000));\n    },\n    onScroll: function onScroll(_ref) {\n      var scrollTop = _ref.target.scrollTop;\n      var messageListNode = this.$refs['message-list'];\n\n      if (!messageListNode) {\n        return;\n      }\n\n      if (this.preScrollHeight - messageListNode.clientHeight - scrollTop < 20) {\n        this.isShowScrollButtomTips = false;\n      }\n    },\n    // 如果滚到底部就保持在底部，否则提示是否要滚到底部\n    keepMessageListOnButtom: function keepMessageListOnButtom() {\n      var messageListNode = this.$refs['message-list'];\n\n      if (!messageListNode) {\n        return;\n      } // 距离底部20px内强制滚到底部,否则提示有新消息\n\n\n      if (this.preScrollHeight - messageListNode.clientHeight - messageListNode.scrollTop < 20) {\n        this.$nextTick(function () {\n          messageListNode.scrollTop = messageListNode.scrollHeight;\n        });\n        this.isShowScrollButtomTips = false;\n      } else {\n        this.isShowScrollButtomTips = true;\n      }\n\n      this.preScrollHeight = messageListNode.scrollHeight;\n    },\n    // 直接滚到底部\n    scrollMessageListToButtom: function scrollMessageListToButtom() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        var messageListNode = _this.$refs['message-list'];\n\n        if (!messageListNode) {\n          return;\n        }\n\n        messageListNode.scrollTop = messageListNode.scrollHeight;\n        _this.preScrollHeight = messageListNode.scrollHeight;\n        _this.isShowScrollButtomTips = false;\n      });\n    },\n    onImageLoaded: function onImageLoaded() {\n      this.keepMessageListOnButtom();\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACAA,6BADA;AAEAC;AACAC;AADA,GAFA;AAKAC,MALA,kBAKA;AACA;AACAC,wBADA;AAEAC,2BAFA;AAGAC;AAHA;AAMA,GAZA;AAaAC,4CACAC;AACAC;AAAA;AAAA,KADA;AAEAC;AAAA;AAAA;AAFA,IADA;AAKAC,cALA,wBAKA;AACA;AACA;AACA,OAFA;AAGA;AATA,IAbA;AAwBAC,SAxBA,qBAwBA,CACA,CAzBA;AA0BAC,SA1BA,qBA0BA,CAEA,CA5BA;AA6BAC,SA7BA,qBA6BA,CAEA,CA/BA;AAgCAC,WAhCA;AAmCAC;AACAC,WADA,mBACAC,IADA,EACA;AACA;AACA,KAHA;AAIAC,YAJA,0BAIA;AAAA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,KAZA;AAaA;AACAC,2BAdA,qCAcA;AACA;;AACA;AACA;AACA,OAJA,CAKA;;;AACA;AACA;AACAC;AACA,SAFA;AAGA;AACA,OALA,MAKA;AACA;AACA;;AACA;AACA,KA7BA;AA8BA;AACAC,6BA/BA,uCA+BA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACAD;AACA;AACA;AACA,OARA;AASA,KAzCA;AA0CAE,iBA1CA,2BA0CA;AACA;AACA;AA5CA;AAnCA","names":["name","components","MergerMessageItem","data","preScrollHeight","mergerMessageList","showMessage","computed","mapState","currentConversation","mergerMessage","mergerList","created","mounted","updated","watch","methods","getDate","time","onScroll","keepMessageListOnButtom","messageListNode","scrollMessageListToButtom","onImageLoaded"],"sourceRoot":"src/components/message/merger-message","sources":["message-merger.vue"],"sourcesContent":["<template>\n    <div class=\"merger-conversation-wrapper\">\n        <div class=\"current-conversation\" @scroll=\"onScroll\">\n            <div class=\"content\">\n                <div class=\"message-list\" ref=\"message-list\" @scroll=\"this.onScroll\">\n                    <div   v-for=\"(messageItem, index) in mergerList(mergerMessage)\" :key=\"index\">\n                        <div class=\"message-item\">\n                            <div class=\"avatar-box\">\n                                <avatar class=\"group-member-avatar\" :src=\"messageItem.avatar\"/>\n                            </div>\n                            <div class=\"container-box\">\n                                <div class=\"nick-date\">\n                                    <div class=\"name text-ellipsis\">{{messageItem.nick || messageItem.from || '小晨曦'}}</div>\n                                    <div class=\"date\">{{ getDate(messageItem.time) }}</div>\n                                </div>\n                                <merger-message-item v-for=\"(item,index) in messageItem.messageBody\" :key=\"index\" :message=\"item\" :payload=\"item.payload\"/>\n                            </div>\n                        </div>\n                        <el-divider></el-divider>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n  import {  mapState } from 'vuex'\n  import MergerMessageItem from './mergerMessage-item'\n  import { getFullDate } from '../../../utils/date'\n  export default {\n    name: 'CurrentConversation',\n    components: {\n      MergerMessageItem,\n    },\n    data() {\n      return {\n        preScrollHeight: 0,\n        mergerMessageList: [],\n        showMessage: null,\n\n      }\n    },\n    computed: {\n      ...mapState({\n        currentConversation: state => state.conversation.currentConversation,\n        mergerMessage: state => state.conversation.mergerMessage\n      }),\n      mergerList() {\n        return function(message) {\n          return message.payload.messageList\n        }\n      }\n    },\n    created () {\n    },\n    mounted() {\n\n    },\n    updated() {\n\n    },\n    watch: {\n\n    },\n    methods: {\n      getDate(time) {\n        return getFullDate(new Date(time * 1000))\n      },\n      onScroll({ target: { scrollTop } }) {\n        let messageListNode = this.$refs['message-list']\n        if (!messageListNode) {\n          return\n        }\n        if (this.preScrollHeight - messageListNode.clientHeight - scrollTop < 20) {\n          this.isShowScrollButtomTips = false\n        }\n      },\n      // 如果滚到底部就保持在底部，否则提示是否要滚到底部\n      keepMessageListOnButtom() {\n        let messageListNode = this.$refs['message-list']\n        if (!messageListNode) {\n          return\n        }\n        // 距离底部20px内强制滚到底部,否则提示有新消息\n        if (this.preScrollHeight - messageListNode.clientHeight - messageListNode.scrollTop < 20) {\n          this.$nextTick(() => {\n            messageListNode.scrollTop = messageListNode.scrollHeight\n          })\n          this.isShowScrollButtomTips = false\n        } else {\n          this.isShowScrollButtomTips = true\n        }\n        this.preScrollHeight = messageListNode.scrollHeight\n      },\n      // 直接滚到底部\n      scrollMessageListToButtom() {\n        this.$nextTick(() => {\n          let messageListNode = this.$refs['message-list']\n          if (!messageListNode) {\n            return\n          }\n          messageListNode.scrollTop = messageListNode.scrollHeight\n          this.preScrollHeight = messageListNode.scrollHeight\n          this.isShowScrollButtomTips = false\n        })\n      },\n      onImageLoaded() {\n        this.keepMessageListOnButtom()\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\" scoped>\n    /* 当前会话的骨架屏 */\n    .merger-conversation-wrapper\n        height 54vh\n        /*background-color #ffffff*/\n        color $base\n        display flex\n        .current-conversation\n            display: flex;\n            flex-direction: column;\n            width: 100%;\n            height: 100%;\n    .content\n        display: flex;\n        flex 1\n        flex-direction: column;\n        height: 100%;\n        overflow: hidden;\n        position: relative;\n        .message-list\n            width: 100%;\n            box-sizing: border-box;\n            overflow-y: scroll;\n            padding: 0 20px;\n\n    .footer\n        border-top: 1px solid $border-base;\n    .show-more {\n        text-align: right;\n        padding: 10px 20px 0 0;\n    }\n    /deep/ .el-checkbox {\n        width 100%\n    }\n    /deep/ .el-checkbox__label {\n        width 100%\n        padding-right 20px\n        box-sizing border-box\n    }\n    /deep/ .el-divider--horizontal {\n        display: block;\n        height: 1px;\n        width: 90%;\n        margin: 0 auto 8px;\n    }\n    .message-item {\n        display flex\n        /*border-bottom 1px solid #DEDEDE*/\n        /*padding-bottom  10px*/\n    }\n    .avatar-box {\n        .avatar {\n            width: 36px;\n            height: 36px;\n            border-radius: 50%;\n            box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.1);\n        }\n    }\n    .container-box {\n        display flex\n        flex-direction column\n        .nick-date {\n            font-size 12px\n            color #B3B3B3\n            display flex\n            flex-direction row\n            .name {\n                margin 0 5px\n            }\n        }\n\n    }\n</style>\n"]}]}
{"remainingRequest":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/babel-loader/lib/index.js!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/eslint-loader/index.js??ref--13-0!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/utils/common.js","dependencies":[{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/utils/common.js","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/babel.config.js","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport TIM from 'tim-js-sdk/tim-js-friendship';\nexport function translateGroupSystemNotice(message) {\n  var groupName = message.payload.groupProfile.name || message.payload.groupProfile.groupID;\n\n  switch (message.payload.operationType) {\n    case 1:\n      return \"\".concat(message.payload.operatorID, \" \\u7533\\u8BF7\\u52A0\\u5165\\u7FA4\\u7EC4\\uFF1A\").concat(groupName);\n\n    case 2:\n      return \"\\u6210\\u529F\\u52A0\\u5165\\u7FA4\\u7EC4\\uFF1A\".concat(groupName);\n\n    case 3:\n      return \"\\u7533\\u8BF7\\u52A0\\u5165\\u7FA4\\u7EC4\\uFF1A\".concat(groupName, \"\\u88AB\\u62D2\\u7EDD\");\n\n    case 4:\n      return \"\\u4F60\\u88AB\\u7BA1\\u7406\\u5458\".concat(message.payload.operatorID, \"\\u8E22\\u51FA\\u7FA4\\u7EC4\\uFF1A\").concat(groupName);\n\n    case 5:\n      return \"\\u7FA4\\uFF1A\".concat(groupName, \" \\u5DF2\\u88AB\").concat(message.payload.operatorID, \"\\u89E3\\u6563\");\n\n    case 6:\n      return \"\".concat(message.payload.operatorID, \"\\u521B\\u5EFA\\u7FA4\\uFF1A\").concat(groupName);\n\n    case 7:\n      return \"\".concat(message.payload.operatorID, \"\\u9080\\u8BF7\\u4F60\\u52A0\\u7FA4\\uFF1A\").concat(groupName);\n\n    case 8:\n      return \"\\u4F60\\u9000\\u51FA\\u7FA4\\u7EC4\\uFF1A\".concat(groupName);\n\n    case 9:\n      return \"\\u4F60\\u88AB\".concat(message.payload.operatorID, \"\\u8BBE\\u7F6E\\u4E3A\\u7FA4\\uFF1A\").concat(groupName, \"\\u7684\\u7BA1\\u7406\\u5458\");\n\n    case 10:\n      return \"\\u4F60\\u88AB\".concat(message.payload.operatorID, \"\\u64A4\\u9500\\u7FA4\\uFF1A\").concat(groupName, \"\\u7684\\u7BA1\\u7406\\u5458\\u8EAB\\u4EFD\");\n\n    case 12:\n      return \"\".concat(message.payload.operatorID, \"\\u9080\\u8BF7\\u4F60\\u52A0\\u7FA4\\uFF1A\").concat(groupName);\n\n    case 13:\n      return \"\".concat(message.payload.operatorID, \"\\u540C\\u610F\\u52A0\\u7FA4\\uFF1A\").concat(groupName);\n\n    case 14:\n      return \"\".concat(message.payload.operatorID, \"\\u62D2\\u63A5\\u52A0\\u7FA4\\uFF1A\").concat(groupName);\n\n    case 255:\n      return '自定义群系统通知: ' + message.payload.userDefinedField;\n  }\n}\nexport var errorMap = {\n  500: '服务器错误',\n  602: '用户名或密码不合法',\n  610: '用户名格式错误',\n  612: '用户已存在',\n  620: '用户不存在',\n  621: '密码错误'\n};\nexport function filterCallingMessage(currentMessageList) {\n  currentMessageList.forEach(function (item) {\n    if (item.callType) {\n      // 对于自己伪造的消息不需要解析\n      return;\n    }\n\n    if (item.type === TIM.TYPES.MSG_MERGER && item.payload.downloadKey !== '') {\n      var promise = window.tim.downloadMergerMessage(item);\n      promise.then(function (imResponse) {\n        // 下载成功后，SDK会更新 message.payload.messageList 等信息\n        item = imResponse;\n      }).catch(function (imError) {\n        // 下载失败\n        console.warn('downloadMergerMessage error:', imError);\n      });\n    }\n\n    if (item.type === TIM.TYPES.MSG_CUSTOM) {\n      var payloadData = {};\n\n      try {\n        payloadData = JSON.parse(item.payload.data);\n      } catch (e) {\n        payloadData = {};\n      }\n\n      if (payloadData.businessID === 1) {\n        if (item.conversationType === TIM.TYPES.CONV_GROUP) {\n          if (payloadData.actionType === 5) {\n            item.nick = payloadData.inviteeList ? payloadData.inviteeList.join(',') : item.from;\n          }\n\n          var _text = window.trtcCalling.extractCallingInfoFromMessage(item);\n\n          var group_text = \"\".concat(_text);\n          item.type = TIM.TYPES.MSG_GRP_TIP;\n          var customData = {\n            operationType: 256,\n            text: group_text,\n            userIDList: []\n          };\n          item.payload = customData; //JSON.stringify(customData)\n        }\n\n        if (item.conversationType === TIM.TYPES.CONV_C2C) {\n          var c2c_text = window.trtcCalling.extractCallingInfoFromMessage(item);\n          var _customData = {\n            text: c2c_text\n          };\n          item.payload = _customData; //JSON.stringify(customData)\n        }\n      }\n    }\n  });\n}",{"version":3,"sources":["/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/utils/common.js"],"names":["TIM","translateGroupSystemNotice","message","groupName","payload","groupProfile","name","groupID","operationType","operatorID","userDefinedField","errorMap","filterCallingMessage","currentMessageList","forEach","item","callType","type","TYPES","MSG_MERGER","downloadKey","promise","window","tim","downloadMergerMessage","then","imResponse","catch","imError","console","warn","MSG_CUSTOM","payloadData","JSON","parse","data","e","businessID","conversationType","CONV_GROUP","actionType","nick","inviteeList","join","from","_text","trtcCalling","extractCallingInfoFromMessage","group_text","MSG_GRP_TIP","customData","text","userIDList","CONV_C2C","c2c_text"],"mappings":"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","sourcesContent":["import TIM from 'tim-js-sdk/tim-js-friendship'\n\nexport function translateGroupSystemNotice(message) {\n  const groupName = message.payload.groupProfile.name || message.payload.groupProfile.groupID\n  switch (message.payload.operationType) {\n    case 1:\n      return `${message.payload.operatorID} 申请加入群组：${groupName}`\n    case 2:\n      return `成功加入群组：${groupName}`\n    case 3:\n      return `申请加入群组：${groupName}被拒绝`\n    case 4:\n      return `你被管理员${message.payload.operatorID}踢出群组：${groupName}`\n    case 5:\n      return `群：${groupName} 已被${message.payload.operatorID}解散`\n    case 6:\n      return `${message.payload.operatorID}创建群：${groupName}`\n    case 7:\n      return `${message.payload.operatorID}邀请你加群：${groupName}`\n    case 8:\n      return `你退出群组：${groupName}`\n    case 9:\n      return `你被${message.payload.operatorID}设置为群：${groupName}的管理员`\n    case 10:\n      return `你被${message.payload.operatorID}撤销群：${groupName}的管理员身份`\n    case 12:\n      return `${message.payload.operatorID}邀请你加群：${groupName}`\n    case 13:\n      return `${message.payload.operatorID}同意加群：${groupName}`\n    case 14:\n      return `${message.payload.operatorID}拒接加群：${groupName}`\n    case 255:\n      return '自定义群系统通知: ' + message.payload.userDefinedField\n  }\n}\n\nexport const errorMap = {\n  500: '服务器错误',\n  602: '用户名或密码不合法',\n  610: '用户名格式错误',\n  612: '用户已存在',\n  620: '用户不存在',\n  621: '密码错误'\n}\nexport function filterCallingMessage(currentMessageList) {\n  currentMessageList.forEach((item) => {\n    if (item.callType) {   // 对于自己伪造的消息不需要解析\n      return\n    }\n    if (item.type === TIM.TYPES.MSG_MERGER && item.payload.downloadKey !== '') {\n      let promise = window.tim.downloadMergerMessage(item)\n      promise.then(function(imResponse) {\n        // 下载成功后，SDK会更新 message.payload.messageList 等信息\n        item = imResponse\n      }).catch(function(imError) {\n        // 下载失败\n        console.warn('downloadMergerMessage error:', imError)\n      })\n    }\n    if(item.type === TIM.TYPES.MSG_CUSTOM) {\n      let payloadData = {}\n      try {\n        payloadData = JSON.parse(item.payload.data)\n      }catch (e) {\n        payloadData = {}\n      }\n      if(payloadData.businessID === 1) {\n        if(item.conversationType === TIM.TYPES.CONV_GROUP) {\n          if(payloadData.actionType === 5) {\n            item.nick = payloadData.inviteeList ? payloadData.inviteeList.join(','):item.from\n          }\n          let _text = window.trtcCalling.extractCallingInfoFromMessage(item)\n          let group_text = `${_text}`\n          item.type = TIM.TYPES.MSG_GRP_TIP\n          let customData = {\n            operationType: 256,\n            text: group_text,\n            userIDList: []\n          }\n          item.payload = customData//JSON.stringify(customData)\n        }\n        if(item.conversationType === TIM.TYPES.CONV_C2C) {\n          let c2c_text = window.trtcCalling.extractCallingInfoFromMessage(item)\n          let customData = {\n            text: c2c_text\n          }\n          item.payload = customData//JSON.stringify(customData)\n        }\n      }\n    }\n\n  })\n}\n\n"]}]}
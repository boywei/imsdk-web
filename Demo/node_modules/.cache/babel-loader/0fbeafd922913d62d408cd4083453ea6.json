{"remainingRequest":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/babel-loader/lib/index.js!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/eslint-loader/index.js??ref--13-0!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/store/modules/blacklist.js","dependencies":[{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/store/modules/blacklist.js","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/babel.config.js","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import tim from \"../../tim\";\nvar blacklistModule = {\n  state: {\n    blacklist: []\n  },\n  mutations: {\n    updateBlacklist: function updateBlacklist(state, blacklist) {\n      state.blacklist = blacklist;\n    },\n    removeFromBlacklist: function removeFromBlacklist(state, userID) {\n      state.blacklist = state.blacklist.filter(function (item) {\n        return item.userID !== userID;\n      });\n    },\n    reset: function reset(state) {\n      Object.assign(state, {\n        blacklist: []\n      });\n    }\n  },\n  actions: {\n    getBlacklist: function getBlacklist(context) {\n      tim.getBlacklist().then(function (_ref) {\n        var data = _ref.data;\n\n        if (data.length > 0) {\n          tim.getUserProfile({\n            userIDList: data\n          }).then(function (_ref2) {\n            var data = _ref2.data;\n            context.commit('updateBlacklist', data);\n          });\n        }\n      });\n    }\n  }\n};\nexport default blacklistModule;",{"version":3,"sources":["/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/store/modules/blacklist.js"],"names":["tim","blacklistModule","state","blacklist","mutations","updateBlacklist","removeFromBlacklist","userID","filter","item","reset","Object","assign","actions","getBlacklist","context","then","data","length","getUserProfile","userIDList","commit"],"mappings":"AAAA,OAAOA,GAAP;AACA,IAAMC,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN,GADe;AAItBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,eADS,2BACOH,KADP,EACcC,SADd,EACyB;AAChCD,MAAAA,KAAK,CAACC,SAAN,GAAkBA,SAAlB;AACD,KAHQ;AAITG,IAAAA,mBAJS,+BAIWJ,KAJX,EAIkBK,MAJlB,EAI0B;AACjCL,MAAAA,KAAK,CAACC,SAAN,GAAkBD,KAAK,CAACC,SAAN,CAAgBK,MAAhB,CAAuB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACF,MAAL,KAAgBA,MAApB;AAAA,OAA3B,CAAlB;AACD,KANQ;AAOTG,IAAAA,KAPS,iBAOHR,KAPG,EAOI;AACXS,MAAAA,MAAM,CAACC,MAAP,CAAcV,KAAd,EAAqB;AACnBC,QAAAA,SAAS,EAAE;AADQ,OAArB;AAGD;AAXQ,GAJW;AAiBtBU,EAAAA,OAAO,EAAE;AACPC,IAAAA,YADO,wBACMC,OADN,EACe;AACpBf,MAAAA,GAAG,CACAc,YADH,GAEGE,IAFH,CAEQ,gBAAc;AAAA,YAAXC,IAAW,QAAXA,IAAW;;AAClB,YAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBlB,UAAAA,GAAG,CAACmB,cAAJ,CAAmB;AAAEC,YAAAA,UAAU,EAAEH;AAAd,WAAnB,EACGD,IADH,CACQ,iBAAc;AAAA,gBAAXC,IAAW,SAAXA,IAAW;AAClBF,YAAAA,OAAO,CAACM,MAAR,CAAe,iBAAf,EAAkCJ,IAAlC;AACD,WAHH;AAID;AACF,OATH;AAUD;AAZM;AAjBa,CAAxB;AAiCA,eAAehB,eAAf","sourcesContent":["import tim from '../../tim'\nconst blacklistModule = {\n  state: {\n    blacklist: []\n  },\n  mutations: {\n    updateBlacklist(state, blacklist) {\n      state.blacklist = blacklist\n    },\n    removeFromBlacklist(state, userID) {\n      state.blacklist = state.blacklist.filter(item => item.userID !== userID)\n    },\n    reset(state) {\n      Object.assign(state, {\n        blacklist: []\n      })\n    }\n  },\n  actions: {\n    getBlacklist(context) {\n      tim\n        .getBlacklist()\n        .then(({ data }) => {\n          if (data.length > 0) {\n            tim.getUserProfile({ userIDList: data })\n              .then(({ data }) => {\n                context.commit('updateBlacklist', data)\n              })\n          }\n        })\n    }\n  }\n}\n\nexport default blacklistModule\n"]}]}
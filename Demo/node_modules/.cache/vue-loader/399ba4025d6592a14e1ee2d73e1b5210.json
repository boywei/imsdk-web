{"remainingRequest":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/components/friend/friend-list.vue?vue&type=template&id=419846e8&","dependencies":[{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/components/friend/friend-list.vue","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"friend-container\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"add-friend\", on: { click: _vm.handleAddButtonClick } },\n        [\n          _c(\"i\", {\n            staticClass: \"tim-icon-friend-add\",\n            staticStyle: { \"font-size\": \"28px\" },\n          }),\n          _c(\"span\", { staticStyle: { \"margin-left\": \"6px\" } }, [\n            _vm._v(\"加好友\"),\n          ]),\n        ]\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"快速搜索好友\",\n            visible: _vm.showDialog,\n            width: \"400px\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.showDialog = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-input\",\n            {\n              attrs: { placeholder: \"请输入用户ID\" },\n              nativeOn: {\n                keydown: function ($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                  ) {\n                    return null\n                  }\n                  return _vm.addFriendConfirm.apply(null, arguments)\n                },\n              },\n              model: {\n                value: _vm.userID,\n                callback: function ($$v) {\n                  _vm.userID = $$v\n                },\n                expression: \"userID\",\n              },\n            },\n            [\n              _c(\"el-button\", {\n                attrs: { slot: \"append\", icon: \"el-icon-search\" },\n                on: { click: _vm.addFriendConfirm },\n                slot: \"append\",\n              }),\n            ],\n            1\n          ),\n          _c(\"el-divider\"),\n          _vm.searchShow\n            ? _c(\n                \"div\",\n                { staticClass: \"search-item\" },\n                [\n                  _c(\"avatar\", { attrs: { src: _vm.profile.avatar } }),\n                  _c(\"div\", { staticClass: \"item-nick\" }, [\n                    _vm._v(_vm._s(_vm.profile.nick || _vm.profile.userID)),\n                  ]),\n                  _c(\"img\", {\n                    staticClass: \"add-friend-icon\",\n                    attrs: {\n                      src: require(\"../../assets/image/add-friend.png\"),\n                    },\n                    on: { click: _vm.addFriendPopClick },\n                  }),\n                ],\n                1\n              )\n            : _vm._e(),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"添加好友\",\n            visible: _vm.dialogAddFriendVisible,\n            width: \"600px\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.dialogAddFriendVisible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-form\",\n            { attrs: { model: _vm.addForm } },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"\", \"label-width\": _vm.formLabelWidth } },\n                [\n                  _c(\n                    \"div\",\n                    { staticClass: \"search-item\" },\n                    [\n                      _c(\"avatar\", { attrs: { src: _vm.profile.avatar } }),\n                      _c(\"div\", { staticClass: \"item-nick\" }, [\n                        _vm._v(_vm._s(_vm.profile.nick || _vm.profile.userID)),\n                      ]),\n                    ],\n                    1\n                  ),\n                ]\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: \"请输入验证信息\",\n                    \"label-width\": _vm.formLabelWidth,\n                  },\n                },\n                [\n                  _c(\"el-input\", {\n                    attrs: {\n                      type: \"textarea\",\n                      rows: 2,\n                      placeholder: \"请输入验证信息\",\n                    },\n                    model: {\n                      value: _vm.addForm.wording,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.addForm, \"wording\", $$v)\n                      },\n                      expression: \"addForm.wording\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"分组\", \"label-width\": _vm.formLabelWidth } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"\" },\n                      model: {\n                        value: _vm.addForm.groupName,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.addForm, \"groupName\", $$v)\n                        },\n                        expression: \"addForm.groupName\",\n                      },\n                    },\n                    [\n                      _c(\"el-option\", {\n                        attrs: { label: \"选择分组\", value: \"\" },\n                      }),\n                      _vm._l(_vm.friendGroupNameList, function (name) {\n                        return _c(\"el-option\", {\n                          key: name,\n                          attrs: { label: name, value: name },\n                        })\n                      }),\n                    ],\n                    2\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"备注\", \"label-width\": _vm.formLabelWidth } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { autocomplete: \"off\" },\n                    model: {\n                      value: _vm.addForm.remark,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.addForm, \"remark\", $$v)\n                      },\n                      expression: \"addForm.remark\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.dialogAddFriendVisible = false\n                    },\n                  },\n                },\n                [_vm._v(\"取 消\")]\n              ),\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.addFriend } },\n                [_vm._v(\"确 定\")]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"新增好友分组\",\n            visible: _vm.dialogAddGroup,\n            width: \"400px\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.dialogAddGroup = $event\n            },\n          },\n        },\n        [\n          _c(\"el-input\", {\n            attrs: { placeholder: \"请输入分组名称\" },\n            nativeOn: {\n              keydown: function ($event) {\n                if (\n                  !$event.type.indexOf(\"key\") &&\n                  _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                ) {\n                  return null\n                }\n                return _vm.addGroupConfirm.apply(null, arguments)\n              },\n            },\n            model: {\n              value: _vm.groupName,\n              callback: function ($$v) {\n                _vm.groupName = $$v\n              },\n              expression: \"groupName\",\n            },\n          }),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.dialogAddGroup = false\n                    },\n                  },\n                },\n                [_vm._v(\"取 消\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: { click: _vm.addGroupConfirm },\n                },\n                [_vm._v(\"确 定\")]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"请输入分组名称\",\n            visible: _vm.dialogRenameGroup,\n            width: \"400px\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.dialogRenameGroup = $event\n            },\n          },\n        },\n        [\n          _c(\"el-input\", {\n            nativeOn: {\n              keydown: function ($event) {\n                if (\n                  !$event.type.indexOf(\"key\") &&\n                  _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                ) {\n                  return null\n                }\n                return _vm.renameGroupConfirm.apply(null, arguments)\n              },\n            },\n            model: {\n              value: _vm.newGroupName,\n              callback: function ($$v) {\n                _vm.newGroupName = $$v\n              },\n              expression: \"newGroupName\",\n            },\n          }),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.dialogRenameGroup = false\n                    },\n                  },\n                },\n                [_vm._v(\"取 消\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: { click: _vm.renameGroupConfirm },\n                },\n                [_vm._v(\"确 定\")]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\"div\", { staticClass: \"scroll-container\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"menu-container\" },\n          [\n            _c(\n              \"el-menu\",\n              {\n                staticClass: \"el-menu-vertical-demo\",\n                attrs: {\n                  \"default-active\": \"application\",\n                  \"default-openeds\": _vm.openeds,\n                },\n                on: { open: _vm.handleOpen, close: _vm.handleClose },\n              },\n              [\n                _c(\n                  \"el-submenu\",\n                  {\n                    staticStyle: { \"border-buttom\": \"1px solid #1c2438\" },\n                    attrs: { index: \"application\" },\n                  },\n                  [\n                    _c(\"template\", { slot: \"title\" }, [\n                      _c(\"i\", {\n                        class: {\n                          \"el-icon-arrow-right\": !_vm.active[\"application\"],\n                          \"el-icon-arrow-down\": _vm.active[\"application\"],\n                        },\n                      }),\n                      _c(\"span\", [\n                        _vm._v(\"新的好友\\n                \"),\n                        _vm.applicationUnreadCount !== 0\n                          ? _c(\n                              \"sup\",\n                              { staticClass: \"unread\" },\n                              [\n                                _vm.applicationUnreadCount > 99\n                                  ? [_vm._v(\"99+\")]\n                                  : [\n                                      _vm._v(\n                                        _vm._s(_vm.applicationUnreadCount)\n                                      ),\n                                    ],\n                              ],\n                              2\n                            )\n                          : _vm._e(),\n                      ]),\n                    ]),\n                    _c(\n                      \"el-menu-item-group\",\n                      _vm._l(\n                        _vm.comeInApplicationList,\n                        function (application, index) {\n                          return _c(\n                            \"el-menu-item\",\n                            {\n                              key: application.userID,\n                              attrs: { index: application.userID },\n                            },\n                            [\n                              _c(\"friend-application\", {\n                                attrs: {\n                                  application: application,\n                                  index: index,\n                                },\n                              }),\n                            ],\n                            1\n                          )\n                        }\n                      ),\n                      1\n                    ),\n                  ],\n                  2\n                ),\n                _c(\n                  \"el-submenu\",\n                  { attrs: { index: \"friendGroup\" } },\n                  [\n                    _c(\"template\", { slot: \"title\" }, [\n                      _c(\"i\", {\n                        class: {\n                          \"el-icon-arrow-right\": !_vm.active[\"friendGroup\"],\n                          \"el-icon-arrow-down\": _vm.active[\"friendGroup\"],\n                        },\n                      }),\n                      _c(\"span\", [_vm._v(\"好友分组\")]),\n                      _c(\"i\", {\n                        staticClass:\n                          \"el-icon-circle-plus-outline friend-group-btn\",\n                        staticStyle: { right: \"20px\", \"font-size\": \"20px\" },\n                        on: {\n                          click: function ($event) {\n                            $event.stopPropagation()\n                            _vm.dialogAddGroup = true\n                          },\n                        },\n                      }),\n                    ]),\n                    _c(\n                      \"el-menu-item-group\",\n                      _vm._l(_vm.friendGroupList, function (friendGroup) {\n                        return _c(\n                          \"el-submenu\",\n                          {\n                            key: friendGroup.name,\n                            attrs: { index: friendGroup.name },\n                          },\n                          [\n                            _c(\"template\", { slot: \"title\" }, [\n                              _c(\"i\", {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: friendGroup.userIDList.length > 0,\n                                    expression:\n                                      \"friendGroup.userIDList.length>0\",\n                                  },\n                                ],\n                                staticClass: \"animated\",\n                                class: {\n                                  \"el-icon-arrow-right\":\n                                    !_vm.active[friendGroup.name],\n                                  \"el-icon-arrow-down\":\n                                    _vm.active[friendGroup.name],\n                                },\n                              }),\n                              _c(\"i\", {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: friendGroup.userIDList.length === 0,\n                                    expression:\n                                      \"friendGroup.userIDList.length===0\",\n                                  },\n                                ],\n                                staticStyle: { \"padding-left\": \"15px\" },\n                              }),\n                              _c(\"span\", [_vm._v(_vm._s(friendGroup.name))]),\n                              _c(\n                                \"span\",\n                                {\n                                  on: {\n                                    click: function ($event) {\n                                      $event.stopPropagation()\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\n                                    \"el-popover\",\n                                    {\n                                      attrs: {\n                                        placement: \"bottom-start\",\n                                        width: \"200\",\n                                        trigger: \"click\",\n                                      },\n                                    },\n                                    [\n                                      _c(\n                                        \"p\",\n                                        {\n                                          on: {\n                                            click: function ($event) {\n                                              return _vm.renameFriendGroupHandler(\n                                                friendGroup.name\n                                              )\n                                            },\n                                          },\n                                        },\n                                        [_vm._v(\"重命名该组\")]\n                                      ),\n                                      _c(\n                                        \"p\",\n                                        {\n                                          on: {\n                                            click: function ($event) {\n                                              return _vm.deleteFriendGroup(\n                                                friendGroup.name\n                                              )\n                                            },\n                                          },\n                                        },\n                                        [_vm._v(\"删除该组\")]\n                                      ),\n                                      _c(\"img\", {\n                                        staticClass:\n                                          \"friend-group-btn more-icon\",\n                                        attrs: {\n                                          slot: \"reference\",\n                                          src: require(\"../../assets/image/more-icon.png\"),\n                                        },\n                                        slot: \"reference\",\n                                      }),\n                                    ]\n                                  ),\n                                ],\n                                1\n                              ),\n                            ]),\n                            _vm._l(\n                              _vm.groupFriend(friendGroup.userIDList),\n                              function (friend, index) {\n                                return _c(\n                                  \"el-menu-item\",\n                                  {\n                                    key: friend.userID,\n                                    attrs: { index: \"1-4-1\" },\n                                  },\n                                  [\n                                    _c(\"friend-item\", {\n                                      attrs: {\n                                        friend: friend,\n                                        friendGroupNameList:\n                                          _vm.friendGroupNameList,\n                                        index: index,\n                                        type: \"groupFriend\",\n                                        groupName: friendGroup.name,\n                                      },\n                                    }),\n                                  ],\n                                  1\n                                )\n                              }\n                            ),\n                          ],\n                          2\n                        )\n                      }),\n                      1\n                    ),\n                  ],\n                  2\n                ),\n                _c(\n                  \"el-submenu\",\n                  {\n                    staticStyle: { \"border-buttom\": \"1px solid #1c2438\" },\n                    attrs: {\n                      \"hide-timeout\": _vm.hideTimeOut,\n                      index: \"friendList\",\n                    },\n                  },\n                  [\n                    _c(\"template\", { slot: \"title\" }, [\n                      _c(\"i\", {\n                        class: {\n                          \"el-icon-arrow-right\": !_vm.active[\"friendList\"],\n                          \"el-icon-arrow-down\": _vm.active[\"friendList\"],\n                        },\n                      }),\n                      _c(\"span\", [_vm._v(\"联系人\")]),\n                    ]),\n                    _c(\n                      \"el-menu-item-group\",\n                      _vm._l(_vm.friendList, function (friend, index) {\n                        return _c(\n                          \"el-menu-item\",\n                          {\n                            key: friend.userID,\n                            attrs: { index: friend.userID },\n                          },\n                          [\n                            _c(\"friend-item\", {\n                              attrs: {\n                                index: index,\n                                friend: friend,\n                                friendGroupNameList: _vm.friendGroupNameList,\n                                type: \"friendList\",\n                              },\n                            }),\n                          ],\n                          1\n                        )\n                      }),\n                      1\n                    ),\n                  ],\n                  2\n                ),\n              ],\n              1\n            ),\n          ],\n          1\n        ),\n      ]),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}
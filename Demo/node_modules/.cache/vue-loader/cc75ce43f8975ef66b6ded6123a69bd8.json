{"remainingRequest":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/components/friend/friend-container.vue?vue&type=template&id=87d0b7fa&","dependencies":[{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/components/friend/friend-container.vue","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.showFriendContent || _vm.showApplicationContent\n    ? _c(\n        \"div\",\n        { staticClass: \"friend-content\", on: { click: _vm.closeHandler } },\n        [\n          _vm.showFriendContent\n            ? _c(\n                \"div\",\n                { staticClass: \"friend-box\" },\n                [\n                  _c(\"div\", { staticClass: \"profile-container\" }, [\n                    _c(\"div\", { staticClass: \"item-nick text-ellipsis\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.friendProfile.profile.nick ||\n                            _vm.friendProfile.profile.userID\n                        )\n                      ),\n                    ]),\n                    _c(\"img\", {\n                      staticClass: \"avatar\",\n                      attrs: {\n                        src: _vm.friendProfile.profile.avatar\n                          ? _vm.friendProfile.profile.avatar\n                          : \"https://imgcache.qq.com/open/qcloud/video/act/webim-avatar/avatar-2.png\",\n                      },\n                    }),\n                  ]),\n                  _c(\"el-divider\"),\n                  _c(\"p\", { staticClass: \"content-box\" }, [\n                    _c(\"span\", { staticClass: \"content-title\" }, [\n                      _vm._v(\"userID\"),\n                    ]),\n                    _c(\"span\", { staticClass: \"content-text\" }, [\n                      _vm._v(_vm._s(_vm.friendProfile.userID)),\n                    ]),\n                  ]),\n                  _c(\n                    \"div\",\n                    { staticClass: \"content-box\" },\n                    [\n                      _c(\"span\", { staticClass: \"content-title\" }, [\n                        _vm._v(\"备注名\"),\n                      ]),\n                      !_vm.showEditRemark\n                        ? _c(\"div\", { staticClass: \"text-box\" }, [\n                            _c(\n                              \"span\",\n                              {\n                                staticClass:\n                                  \"content-text  content-width text-ellipsis\",\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(_vm.friendProfile.remark || \"暂无\")\n                                ),\n                              ]\n                            ),\n                            _c(\"i\", {\n                              staticClass: \"el-icon-edit\",\n                              staticStyle: {\n                                cursor: \"pointer\",\n                                \"font-size\": \"16px\",\n                                \"margin-left\": \"6px\",\n                              },\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                  _vm.showEditRemark = true\n                                  _vm.inputFocus(\"showEditRemark\")\n                                },\n                              },\n                            }),\n                          ])\n                        : _c(\"el-input\", {\n                            ref: \"showEditRemark\",\n                            staticStyle: { display: \"inline-block\" },\n                            attrs: { autofocus: \"\", size: \"mini\" },\n                            on: { blur: _vm.blurHandler },\n                            nativeOn: {\n                              keydown: function ($event) {\n                                if (\n                                  !$event.type.indexOf(\"key\") &&\n                                  _vm._k(\n                                    $event.keyCode,\n                                    \"enter\",\n                                    13,\n                                    $event.key,\n                                    \"Enter\"\n                                  )\n                                ) {\n                                  return null\n                                }\n                                return _vm.editRemarkHandler.apply(\n                                  null,\n                                  arguments\n                                )\n                              },\n                            },\n                            model: {\n                              value: _vm.profileRemark,\n                              callback: function ($$v) {\n                                _vm.profileRemark = $$v\n                              },\n                              expression: \"profileRemark\",\n                            },\n                          }),\n                    ],\n                    1\n                  ),\n                  _c(\"p\", { staticClass: \"content-box\" }, [\n                    _c(\"span\", { staticClass: \"content-title\" }, [\n                      _vm._v(\"来源\"),\n                    ]),\n                    _c(\"span\", { staticClass: \"content-text\" }, [\n                      _vm._v(_vm._s(_vm.getSource(_vm.friendProfile.source))),\n                    ]),\n                  ]),\n                  _c(\"el-divider\"),\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.friendType === \"friendList\",\n                          expression: \"friendType==='friendList'\",\n                        },\n                      ],\n                      staticClass: \"content-box\",\n                    },\n                    [\n                      _c(\n                        \"span\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: !_vm.showEdit,\n                              expression: \"!showEdit\",\n                            },\n                          ],\n                          staticClass: \"content-title\",\n                          staticStyle: { \"line-height\": \"35px\" },\n                        },\n                        [_vm._v(\"所在分组\")]\n                      ),\n                      _c(\n                        \"span\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.showEdit,\n                              expression: \"showEdit\",\n                            },\n                          ],\n                          staticClass: \"content-title\",\n                          staticStyle: { \"line-height\": \"35px\" },\n                        },\n                        [_vm._v(\"添加到分组\")]\n                      ),\n                      _c(\"div\", { staticClass: \"text-content\" }, [\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: !_vm.showEdit,\n                                expression: \"!showEdit\",\n                              },\n                            ],\n                            staticClass: \"content-text\",\n                          },\n                          [_vm._v(_vm._s(_vm.groupName))]\n                        ),\n                        _c(\"i\", {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: !_vm.showEdit,\n                              expression: \"!showEdit\",\n                            },\n                          ],\n                          staticClass: \"el-icon-edit edit-icon\",\n                          on: {\n                            click: function ($event) {\n                              $event.stopPropagation()\n                              return _vm.showEditHandler.apply(null, arguments)\n                            },\n                          },\n                        }),\n                      ]),\n                      _vm.showEdit\n                        ? _c(\n                            \"el-select\",\n                            {\n                              attrs: { placeholder: \"选择分组\" },\n                              on: { change: _vm.addToFriendGroup },\n                              model: {\n                                value: _vm.addGroupName,\n                                callback: function ($$v) {\n                                  _vm.addGroupName = $$v\n                                },\n                                expression: \"addGroupName\",\n                              },\n                            },\n                            _vm._l(_vm.friendGroupList, function (item) {\n                              return _c(\"el-option\", {\n                                key: item.name,\n                                attrs: { label: item.name, value: item.name },\n                                on: {\n                                  blur: function ($event) {\n                                    _vm.showEdit = false\n                                  },\n                                },\n                              })\n                            }),\n                            1\n                          )\n                        : _vm._e(),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"p\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.friendType === \"groupFriend\",\n                          expression: \"friendType==='groupFriend'\",\n                        },\n                      ],\n                      staticClass: \"content-box\",\n                      staticStyle: { height: \"40px\" },\n                    },\n                    [\n                      _c(\n                        \"span\",\n                        {\n                          staticClass: \"content-title\",\n                          staticStyle: { \"line-height\": \"35px\" },\n                        },\n                        [_vm._v(\"所在分组\")]\n                      ),\n                      _c(\n                        \"span\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: !_vm.showEdit,\n                              expression: \"!showEdit\",\n                            },\n                          ],\n                          staticClass: \"content-text\",\n                          staticStyle: { \"line-height\": \"35px\" },\n                        },\n                        [_vm._v(_vm._s(_vm.groupName))]\n                      ),\n                    ]\n                  ),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"sendBtn\",\n                      on: {\n                        click: function ($event) {\n                          $event.stopPropagation()\n                          return _vm.checkoutConversation(\n                            _vm.friendProfile.userID\n                          )\n                        },\n                      },\n                    },\n                    [_vm._v(\"发送消息\")]\n                  ),\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.friendType === \"groupFriend\",\n                          expression: \"friendType==='groupFriend'\",\n                        },\n                      ],\n                      staticClass: \"delete-text\",\n                      on: {\n                        click: function ($event) {\n                          $event.stopPropagation()\n                          return _vm.removeFromFriendGroup(\n                            _vm.friendProfile.userID\n                          )\n                        },\n                      },\n                    },\n                    [_vm._v(\"从该群组中移除\")]\n                  ),\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.friendType === \"friendList\",\n                          expression: \"friendType==='friendList'\",\n                        },\n                      ],\n                      staticClass: \"delete-text\",\n                      on: {\n                        click: function ($event) {\n                          $event.stopPropagation()\n                          return _vm.removeFromFriendList(\n                            _vm.friendProfile.userID\n                          )\n                        },\n                      },\n                    },\n                    [_vm._v(\"删除该好友\")]\n                  ),\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm.showApplicationContent\n            ? _c(\n                \"div\",\n                { staticClass: \"friend-box\" },\n                [\n                  _c(\"div\", { staticClass: \"profile-container\" }, [\n                    _c(\"div\", { staticClass: \"item-nick text-ellipsis\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.applicationContent.nick ||\n                            _vm.applicationContent.userID\n                        )\n                      ),\n                    ]),\n                    _c(\"img\", {\n                      staticClass: \"avatar\",\n                      attrs: {\n                        src: _vm.applicationContent.avatar\n                          ? _vm.applicationContent.avatar\n                          : \"http://imgcache.qq.com/open/qcloud/video/act/webim-avatar/avatar-2.png\",\n                      },\n                    }),\n                  ]),\n                  _c(\"el-divider\"),\n                  _c(\"p\", { staticClass: \"content-box\" }, [\n                    _c(\"span\", { staticClass: \"content-title\" }, [\n                      _vm._v(\"userID\"),\n                    ]),\n                    _c(\"span\", { staticClass: \"content-text\" }, [\n                      _vm._v(_vm._s(_vm.applicationContent.userID)),\n                    ]),\n                  ]),\n                  _c(\"p\", { staticClass: \"content-box\" }, [\n                    _c(\"span\", { staticClass: \"content-title\" }, [\n                      _vm._v(\"来源\"),\n                    ]),\n                    _c(\n                      \"span\",\n                      {\n                        staticClass: \"content-text content-width text-ellipsis\",\n                      },\n                      [\n                        _vm._v(\n                          _vm._s(_vm.getSource(_vm.applicationContent.source))\n                        ),\n                      ]\n                    ),\n                  ]),\n                  _vm.showRemark\n                    ? _c(\n                        \"div\",\n                        { staticClass: \"content-box\" },\n                        [\n                          _c(\"span\", { staticClass: \"content-title\" }, [\n                            _vm._v(\"备注名\"),\n                          ]),\n                          _c(\"el-input\", {\n                            ref: \"showRemark\",\n                            staticStyle: { display: \"inline-block\" },\n                            attrs: { autofocus: \"\", size: \"mini\" },\n                            on: { blur: _vm.remarkBlurHandler },\n                            nativeOn: {\n                              keydown: function ($event) {\n                                if (\n                                  !$event.type.indexOf(\"key\") &&\n                                  _vm._k(\n                                    $event.keyCode,\n                                    \"enter\",\n                                    13,\n                                    $event.key,\n                                    \"Enter\"\n                                  )\n                                ) {\n                                  return null\n                                }\n                                return _vm.editRemarkHandler.apply(\n                                  null,\n                                  arguments\n                                )\n                              },\n                            },\n                            model: {\n                              value: _vm.acceptApplication.remark,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.acceptApplication, \"remark\", $$v)\n                              },\n                              expression: \"acceptApplication.remark\",\n                            },\n                          }),\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                  _c(\"el-divider\"),\n                  _c(\n                    \"p\",\n                    { staticClass: \"content-box\" },\n                    [\n                      _c(\"span\", { staticClass: \"content-title\" }, [\n                        _vm._v(\"打招呼\"),\n                      ]),\n                      _c(\n                        \"el-tooltip\",\n                        {\n                          staticClass: \"item\",\n                          attrs: {\n                            effect: \"dark\",\n                            content: _vm.applicationContent.wording,\n                            placement: \"bottom-end\",\n                          },\n                        },\n                        [\n                          _c(\n                            \"span\",\n                            {\n                              staticClass:\n                                \"content-text content-width text-ellipsis\",\n                            },\n                            [_vm._v(_vm._s(_vm.applicationContent.wording))]\n                          ),\n                        ]\n                      ),\n                    ],\n                    1\n                  ),\n                  !_vm.showRemark\n                    ? _c(\"div\", { staticClass: \"application-box\" }, [\n                        _c(\n                          \"p\",\n                          {\n                            staticClass: \"application-refuse\",\n                            on: { click: _vm.acceptHandler },\n                          },\n                          [_vm._v(\"同意\")]\n                        ),\n                        _c(\n                          \"p\",\n                          {\n                            staticClass: \"application-delete\",\n                            on: {\n                              click: function ($event) {\n                                return _vm.refuseFriendApplication(\n                                  _vm.applicationContent.userID\n                                )\n                              },\n                            },\n                          },\n                          [_vm._v(\"拒绝\")]\n                        ),\n                      ])\n                    : _c(\"div\", { staticClass: \"application-box\" }, [\n                        _c(\n                          \"p\",\n                          {\n                            staticClass: \"application-refuse\",\n                            on: {\n                              click: function ($event) {\n                                return _vm.acceptFriendApplication(\n                                  _vm.applicationContent.userID\n                                )\n                              },\n                            },\n                          },\n                          [_vm._v(\"确认\")]\n                        ),\n                        _c(\n                          \"p\",\n                          {\n                            staticClass: \"application-delete\",\n                            on: {\n                              click: function ($event) {\n                                return _vm.cancelHandler()\n                              },\n                            },\n                          },\n                          [_vm._v(\"取消\")]\n                        ),\n                      ]),\n                ],\n                1\n              )\n            : _vm._e(),\n        ]\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}
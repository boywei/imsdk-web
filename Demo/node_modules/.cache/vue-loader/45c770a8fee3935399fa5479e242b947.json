{"remainingRequest":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/components/conversation/current-conversation.vue?vue&type=template&id=72bead03&scoped=true&","dependencies":[{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/src/components/conversation/current-conversation.vue","mtime":1648707124000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei/IdeaProjects/boywei/imsdk-web/Demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"current-conversation-wrapper\" },\n    [\n      _c(\"FriendProfile\", { staticStyle: { position: \"relative\" } }),\n      _vm.showCurrentConversation\n        ? _c(\n            \"div\",\n            {\n              staticClass: \"current-conversation\",\n              on: { scroll: _vm.onScroll },\n            },\n            [\n              _c(\"div\", { staticClass: \"header\" }, [\n                _c(\"div\", { staticClass: \"name\" }, [_vm._v(_vm._s(_vm.name))]),\n                _c(\"div\", {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value:\n                        !_vm.currentConversation.conversationID.includes(\n                          \"SYSTEM\"\n                        ),\n                      expression:\n                        \"!currentConversation.conversationID.includes('SYSTEM')\",\n                    },\n                  ],\n                  staticClass: \"btn-more-info\",\n                  class: _vm.showConversationProfile ? \"\" : \"left-arrow\",\n                  attrs: { title: \"查看详细信息\" },\n                  on: { click: _vm.showMore },\n                }),\n              ]),\n              _c(\"div\", { staticClass: \"content\" }, [\n                _c(\n                  \"div\",\n                  {\n                    ref: \"message-list\",\n                    staticClass: \"message-list\",\n                    on: { scroll: this.onScroll },\n                  },\n                  [\n                    !_vm.isCompleted\n                      ? _c(\n                          \"div\",\n                          { staticClass: \"more\" },\n                          [\n                            _c(\n                              \"el-button\",\n                              {\n                                attrs: { type: \"text\" },\n                                on: {\n                                  click: function ($event) {\n                                    return _vm.$store.dispatch(\n                                      \"getMessageList\",\n                                      _vm.currentConversation.conversationID\n                                    )\n                                  },\n                                },\n                              },\n                              [_vm._v(\"查看更多\")]\n                            ),\n                          ],\n                          1\n                        )\n                      : _c(\"div\", { staticClass: \"no-more\" }, [\n                          _vm._v(\"没有更多了\"),\n                        ]),\n                    _vm.selectMessage\n                      ? _c(\n                          \"el-checkbox-group\",\n                          {\n                            model: {\n                              value: _vm.checkList,\n                              callback: function ($$v) {\n                                _vm.checkList = $$v\n                              },\n                              expression: \"checkList\",\n                            },\n                          },\n                          _vm._l(_vm.currentMessageList, function (message) {\n                            return _c(\n                              \"el-checkbox\",\n                              {\n                                key: message.ID,\n                                attrs: {\n                                  label: message.ID,\n                                  disabled: message.status === \"fail\",\n                                },\n                              },\n                              [\n                                _c(\"message-item\", {\n                                  attrs: { message: message },\n                                }),\n                              ],\n                              1\n                            )\n                          }),\n                          1\n                        )\n                      : _vm._l(_vm.currentMessageList, function (message) {\n                          return _c(\"message-item\", {\n                            key: message.ID,\n                            attrs: { message: message },\n                          })\n                        }),\n                  ],\n                  2\n                ),\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.isShowScrollButtomTips,\n                        expression: \"isShowScrollButtomTips\",\n                      },\n                    ],\n                    staticClass: \"newMessageTips\",\n                    on: { click: _vm.scrollMessageListToButtom },\n                  },\n                  [_vm._v(\"回到最新位置\")]\n                ),\n              ]),\n              _vm.showMessageSendBox\n                ? _c(\n                    \"div\",\n                    { staticClass: \"footer\" },\n                    [\n                      _vm.selectMessage\n                        ? _c(\"div\", { staticClass: \"merger-btn\" }, [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"relay-btn\",\n                                on: { click: _vm.singleRelay },\n                              },\n                              [\n                                _c(\"img\", {\n                                  staticClass: \"relay-icon\",\n                                  attrs: {\n                                    src: require(\"../../assets/image/sig-relay.png\"),\n                                  },\n                                }),\n                                _c(\"span\", { staticClass: \"relay-title\" }, [\n                                  _vm._v(\"逐条转发\"),\n                                ]),\n                              ]\n                            ),\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"relay-btn\",\n                                on: { click: _vm.mergerRelay },\n                              },\n                              [\n                                _c(\"img\", {\n                                  staticClass: \"relay-icon\",\n                                  attrs: {\n                                    src: require(\"../../assets/image/merger-relay.png\"),\n                                  },\n                                }),\n                                _c(\"span\", { staticClass: \"relay-title\" }, [\n                                  _vm._v(\"合并转发\"),\n                                ]),\n                              ]\n                            ),\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"relay-btn\",\n                                on: { click: _vm.closeSelectMessage },\n                              },\n                              [\n                                _c(\"img\", {\n                                  staticClass: \"relay-icon\",\n                                  attrs: {\n                                    src: require(\"../../assets/image/close-relay.png\"),\n                                  },\n                                }),\n                                _c(\"span\", { staticClass: \"relay-title\" }, [\n                                  _vm._v(\"取消\"),\n                                ]),\n                              ]\n                            ),\n                          ])\n                        : _c(\"message-send-box\"),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n            ]\n          )\n        : _vm._e(),\n      _c(\n        \"div\",\n        [_vm.isShowConversationList ? _c(\"message-relay\") : _vm._e()],\n        1\n      ),\n      _vm.showConversationProfile\n        ? _c(\"div\", { staticClass: \"profile\" }, [_c(\"conversation-profile\")], 1)\n        : _vm._e(),\n      _c(\"member-profile-card\"),\n      _c(\n        \"el-popover\",\n        {\n          ref: \"dropdown\",\n          attrs: { placement: \"left-start\", width: \"700\" },\n          model: {\n            value: _vm.mergerMessagePop,\n            callback: function ($$v) {\n              _vm.mergerMessagePop = $$v\n            },\n            expression: \"mergerMessagePop\",\n          },\n        },\n        [\n          _c(\"div\", { staticClass: \"pop-header\" }, [\n            _vm.mergerMessageList.length > 1\n              ? _c(\"img\", {\n                  staticClass: \"pop-back\",\n                  attrs: { src: require(\"../../assets/image/back.png\") },\n                  on: { click: _vm.mergerMessageBack },\n                })\n              : _vm._e(),\n            _c(\"span\", { staticClass: \"title\" }, [\n              _vm._v(_vm._s(_vm.mergerTitle)),\n            ]),\n            _c(\"img\", {\n              staticClass: \"pop-close\",\n              attrs: { src: require(\"../../assets/image/close.png\") },\n              on: { click: _vm.closeMessagePop },\n            }),\n          ]),\n          _c(\n            \"transition\",\n            {\n              attrs: {\n                name: \"custom-classes-transition\",\n                \"enter-active-class\": \"animated fadeIn\",\n                \"leave-active-class\": \"animated fadeOut\",\n              },\n            },\n            [_vm.mergerMessagePop ? _c(\"message-merger\") : _vm._e()],\n            1\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}